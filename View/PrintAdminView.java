/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


package View;

import java.awt.event.ActionListener;
import java.awt.print.PrinterException;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.MessageFormat;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/**
 *
 * @author dinhq
 */
public class PrintAdminView extends javax.swing.JFrame {

    /**
     * Creates new form PrintAdminView
     */
    public PrintAdminView() {
        initComponents();
        model = new DefaultTableModel();
    }
    public DefaultTableModel model;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
     public void BindingChucDanh(Vector data){
        Vector clums = new Vector();
        clums.add("Số thứ tự");
        clums.add("Mã Cán Bộ");
        clums.add("Tên cán bộ");
        clums.add("Chức danh");
        clums.add("Thời gian nhận");
        model.setColumnIdentifiers(clums);
        DefaultTableModel model = new DefaultTableModel(data, clums);
        TBL_print.setModel(model);
    }
    
    public void BindingChucVu(Vector data){
        Vector clums = new Vector();
        clums.add("Số thứ tự");
        clums.add("Mã Cán Bộ");
        clums.add("Tên cán bộ");
        clums.add("Chức vụ nhận");
        clums.add("Thời gian nhận");
        clums.add("Phụ Cấp chức vụ");
        model.setColumnIdentifiers(clums);
        DefaultTableModel model = new DefaultTableModel(data, clums);
        TBL_print.setModel(model);
    }
    
    public void BindingGV_GiangDay(Vector data){
        Vector clums = new Vector();
        clums.add("Số Thứ tự");
        clums.add("Mã giảng viên");
        clums.add("Tên giảng viên");
        clums.add("Mã môn học");
        model.setColumnIdentifiers(clums);
        DefaultTableModel model = new DefaultTableModel(data, clums);
        TBL_print.setModel(model);
    }
    
    public void BindingChamThi(Vector data){
        Vector clums = new Vector();
        clums.add("Mã chấm thi");
        clums.add("Mã Lớp");
        clums.add("Mã cán bộ");
        clums.add("Tên cán bộ");
        clums.add("Mã Môn Học");
        clums.add("Ngày Nộp");
        clums.add("Số Bài Thi");
        model.setColumnIdentifiers(clums);
        DefaultTableModel model = new DefaultTableModel(data, clums);
        TBL_print.setModel(model);
    }
    
    public void BindingGiangVien_GT(Vector data){
        Vector clums = new Vector();
        clums.add("Số Thứ tự");
        clums.add("Mã cán bộ");
        clums.add("Tên cán bộ");
        clums.add("Mã giáo trình");
        model.setColumnIdentifiers(clums);
        DefaultTableModel model = new DefaultTableModel(data, clums);
        TBL_print.setModel(model);
    }
    
    public void BindingGiangVien_BBTC(Vector data){
        Vector clums = new Vector();
        clums.add("Số Thứ tự");
        clums.add("Mã cán bộ");
        clums.add("Tên cán bộ");
        clums.add("Mã bài báo");
        model.setColumnIdentifiers(clums);
        DefaultTableModel model = new DefaultTableModel(data, clums);
        TBL_print.setModel(model);
    }
    
    public void BindingGiangVien_NCKH(Vector data){
        
        Vector clums = new Vector();
        clums.add("Số Thứ Tự");
        clums.add("Mã cán bộ");
        clums.add("Tên cán bộ");
        clums.add("Mã đề tài");
        model.setColumnIdentifiers(clums);
        DefaultTableModel model = new DefaultTableModel(data, clums);
        TBL_print.setModel(model);
    }
    
    public void BindingCanBo_GiaDinh(Vector data){
        
        Vector clums = new Vector();
        clums.add("Số Thứ Tự");
        clums.add("Mã cán bộ");
        clums.add("Tên cán bộ");
        clums.add("Mã gia đình");
        model.setColumnIdentifiers(clums);
        DefaultTableModel model = new DefaultTableModel(data, clums);
        TBL_print.setModel(model);
    }
    
    public void BindingGiaoTrinh(Vector data){
        Vector clums = new Vector();
        
        clums.add("Mã Giáo Trình");
        clums.add("Tên Giáo Trình");
        clums.add("Tên Tác Giả");
        clums.add("Năm Xuất Bản");
        clums.add("Nhà Xuất Bản");
        
        model.setColumnIdentifiers(clums);
        
        DefaultTableModel model = new DefaultTableModel(data,clums);
        TBL_print.setModel(model);
    }
    
    public void BindingCongDoanPhi(Vector data){
        Vector clums = new Vector();
        
        clums.add("Số Thứ Tự");
        clums.add("Mã Cán Bộ");
        clums.add("Tên Cán Bộ");
        clums.add("Số Tiền Đóng");
        clums.add("Thời Gian Đóng");
        
        model.setColumnIdentifiers(clums);
        
        DefaultTableModel model = new DefaultTableModel(data,clums);
        TBL_print.setModel(model);
    }
    
    public void BindingDoanPhi(Vector data){
        Vector clums = new Vector();
        
        clums.add("Số Thứ Tự");
        clums.add("Mã Cán Bộ");
        clums.add("Tên Cán Bộ");
        clums.add("Số Tiền Đóng");
        clums.add("Thời Gian Đóng");
        
        model.setColumnIdentifiers(clums);
        
        DefaultTableModel model = new DefaultTableModel(data,clums);
        TBL_print.setModel(model);
    }
    
    public void BindingDangPhi(Vector data){
        Vector clums = new Vector();
        
        clums.add("Số Thứ Tự");
        clums.add("Mã Cán Bộ");
        clums.add("Tên Cán Bộ");
        clums.add("Số Tiền Đóng");
        clums.add("Thời Gian Đóng");
        
        model.setColumnIdentifiers(clums);
        
        DefaultTableModel model = new DefaultTableModel(data,clums);
        TBL_print.setModel(model);
    }
    
    public void BindingLuong(Vector data){
        Vector clums = new Vector();
        
        clums.add("Số Thứ Tự");
        clums.add("Mã Cán Bộ");
        clums.add("Tên Cán Bộ");
        clums.add("Hệ Số Lương");
        clums.add("Thời Gian Bắt Đầu");
        clums.add("Thời Gian Kết Thúc");
        clums.add("Tiền Lương");
        
        model.setColumnIdentifiers(clums);
        
        DefaultTableModel model = new DefaultTableModel(data,clums);
        TBL_print.setModel(model);
    }
    
    public void BindingNCKH(Vector data){
        
        Vector clums = new Vector();
        
        clums.add("Mã Đề Tài");
        clums.add("Tên Đề Tài");
        clums.add("Cấp");
        clums.add("Kinh Phí");
        clums.add("Thời Gian Bắt Đầu");
        clums.add("Thời Gian Kết Thúc");
        clums.add("Chủ Trì Đề Tài");
        clums.add("Tình Trạng");
        clums.add("Kết Quả");
        
        model.setColumnIdentifiers(clums);
        
        DefaultTableModel model = new DefaultTableModel(data,clums);
        TBL_print.setModel(model);
    }
    
    public void BindingBB(Vector data){
        
        Vector clums = new Vector();
        clums.add("Mã Tạp Chí");
        clums.add("Tên Tạp Chí");
        clums.add("Số");
        clums.add("Thời Gian Xuất Bản");
        clums.add("Chỉ Số ISSN");
        clums.add("Hệ Số IF");
        
        model.setColumnIdentifiers(clums);
        
        DefaultTableModel model = new DefaultTableModel(data,clums);
        TBL_print.setModel(model);
    }
    
    public void BindingGD(Vector data){
        
        Vector clums = new Vector();
        clums.add("Số thứ tự");
        clums.add("Mã Gia Đình");
        clums.add("Họ Tên Con");
        clums.add("Năm Sinh");
        clums.add("Thành Tích");
        
        model.setColumnIdentifiers(clums);
        DefaultTableModel model = new DefaultTableModel(data, clums);
        TBL_print.setModel(model);
    }
            
    public void BindingCanBo(Vector data) {
        Vector clums = new Vector();
        clums.add("Mã Cán Bộ");
        clums.add("Tên Đăng Nhập");
        clums.add("Họ và Tên");
        clums.add("Ngày Sinh");
        clums.add("Giới Tính");
        clums.add("Nơi Công Tác");
        clums.add("Thời gian bắt đầu công tác");
        clums.add("Trình Độ");
        clums.add("Số Tài Khoản");
        clums.add("Mã Số Thuế");
        clums.add("Địa Chỉ");
        clums.add("Số Điện Thoại");
        clums.add("Email");
        clums.add("Thành Tích");
        clums.add("Thông Tin Khác");

                
        model.setColumnIdentifiers(clums);
        DefaultTableModel model = new DefaultTableModel(data, clums);
        TBL_print.setModel(model);
    }
    
    public void BindingGday(Vector data){
        Vector clums = new Vector();
        clums.add("Mã Môn Học");
        clums.add("Tên Môn Học");
        clums.add("Số Tín Chỉ");
        clums.add("Lớp");
        clums.add("Số Sinh Viên");
        clums.add("Học Kỳ");
        clums.add("Năm Học");
        clums.add("Phụ Cấp Giảng Dạy");
                
        model.setColumnIdentifiers(clums);
        
        DefaultTableModel model = new DefaultTableModel(data, clums);
        TBL_print.setModel(model);
    }
    

        
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TBL_print = new javax.swing.JTable();
        LB_TenBang = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        CHBx_Footer = new javax.swing.JCheckBox();
        CHBx_Header = new javax.swing.JCheckBox();
        Txt_Header = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Cbx_bang = new javax.swing.JComboBox();
        Txt_Footer = new javax.swing.JTextField();
        CHBx_Fit_Width = new javax.swing.JCheckBox();
        CHBx_showprintdialog = new javax.swing.JCheckBox();
        CHBx_Interative = new javax.swing.JCheckBox();
        RBtn_Excel = new javax.swing.JRadioButton();
        RBtn_PDF = new javax.swing.JRadioButton();
        Print_Btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("In");
        setPreferredSize(new java.awt.Dimension(1024, 720));

        TBL_print.setAutoCreateRowSorter(true);
        TBL_print.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(TBL_print);

        LB_TenBang.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Tùy Chỉnh"));

        CHBx_Footer.setText("Chọn Footer");
        CHBx_Footer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CHBx_FooterActionPerformed(evt);
            }
        });

        CHBx_Header.setText("Chọn Header");
        CHBx_Header.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CHBx_HeaderActionPerformed(evt);
            }
        });

        Txt_Header.setEnabled(false);

        jLabel2.setText("Chọn Bảng In");

        Cbx_bang.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Chọn", "Cán Bộ", "Gia Đình", "Lương", "Đảng Phí", "Công Đoàn Phí", "Đoàn Phí", "Chức Vụ", "Chức Danh", "Bài Báo - Tạp Chí", "Nghiên Cứu Khoa Học", "Chấm Thi", "Giảng Dạy" }));
        Cbx_bang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cbx_bangActionPerformed(evt);
            }
        });

        Txt_Footer.setEnabled(false);

        CHBx_Fit_Width.setSelected(true);
        CHBx_Fit_Width.setText("Chỉnh độ rộng cột");

        CHBx_showprintdialog.setSelected(true);
        CHBx_showprintdialog.setText("Hiển thị cửa sổ in");

        CHBx_Interative.setSelected(true);
        CHBx_Interative.setText("Tương tác");

        RBtn_Excel.setText("Excel");
        RBtn_Excel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBtn_ExcelActionPerformed(evt);
            }
        });

        RBtn_PDF.setSelected(true);
        RBtn_PDF.setText("PDF");
        RBtn_PDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBtn_PDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(CHBx_Header)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Txt_Header, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(Cbx_bang, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(CHBx_Footer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Txt_Footer)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CHBx_showprintdialog)
                    .addComponent(CHBx_Fit_Width)
                    .addComponent(CHBx_Interative))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RBtn_Excel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RBtn_PDF, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(RBtn_Excel)
                        .addGap(33, 33, 33)
                        .addComponent(RBtn_PDF))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(Cbx_bang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CHBx_showprintdialog))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CHBx_Header)
                            .addComponent(Txt_Header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CHBx_Fit_Width))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CHBx_Footer)
                            .addComponent(Txt_Footer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CHBx_Interative))))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        Print_Btn.setText("Print");
        Print_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Print_BtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(Print_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LB_TenBang, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(316, 316, 316))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LB_TenBang, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(Print_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Cbx_bangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cbx_bangActionPerformed
      
    }//GEN-LAST:event_Cbx_bangActionPerformed

    private void CHBx_HeaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CHBx_HeaderActionPerformed
        if(CHBx_Header.isSelected()){
            Txt_Header.setEnabled(true);    
        }else{
            Txt_Header.setEnabled(false);
        }
    }//GEN-LAST:event_CHBx_HeaderActionPerformed

    private void CHBx_FooterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CHBx_FooterActionPerformed
        if(CHBx_Footer.isSelected()){
            Txt_Footer.setEnabled(true);
        }else{
            Txt_Footer.setEnabled(false);
        }
        
    }//GEN-LAST:event_CHBx_FooterActionPerformed
    
    public void toExcel(JTable table, File file){    
        try{
            TableModel model = TBL_print.getModel();
            FileWriter excel = new FileWriter(file);
            BufferedWriter bw=new BufferedWriter(excel);
            for(int i = 0; i < model.getColumnCount(); i++){
                bw.write(model.getColumnName(i) + "\t");
                }

            bw.write("\n");

            for(int i=0; i< model.getRowCount(); i++) {
                for(int j=0; j < model.getColumnCount(); j++) {
                    String string = model.getValueAt(i,j).toString()+"\t";
                    byte[] utf8 = string.getBytes("UTF-8");
    
                    string = new String(utf8, "UTF-8");
                    bw.write(string);
                }
                bw.write("\n");
            }
        bw.close();
        }catch(IOException e){ System.out.println(e); }
        }
    
    private void Print_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Print_BtnActionPerformed
        
            if(RBtn_PDF.isSelected()){
                MessageFormat header = null;
                if(CHBx_Header.isSelected()){
                     header = new MessageFormat(Txt_Header.getText());
                }
                MessageFormat footer = null;
                if(CHBx_Footer.isSelected()){
                    footer = new MessageFormat(Txt_Footer.getText());
                }

                boolean fitWidth = CHBx_Fit_Width.isSelected();
                boolean showPrintDialog = CHBx_showprintdialog.isSelected();
                boolean interactive = CHBx_Interative.isSelected();

                JTable.PrintMode mode = fitWidth ? JTable.PrintMode.FIT_WIDTH
                                                 : JTable.PrintMode.NORMAL;
                try {
                    boolean complete = TBL_print.print(mode, header, footer, showPrintDialog, null, interactive, null);
                    if (complete) {
                        JOptionPane.showMessageDialog(null,
                                                      "Printing Complete",
                                                      "Printing Result",
                                                      JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null,
                                                      "Printing Cancelled",
                                                      "Printing Result",
                                                      JOptionPane.INFORMATION_MESSAGE);
                    }
                } catch (PrinterException pe) {
                    JOptionPane.showMessageDialog(null,
                                                  "Printing Failed: " + pe.getMessage(),
                                                  "Printing Result",
                                                  JOptionPane.ERROR_MESSAGE);
                }
            }
                if(RBtn_Excel.isSelected()){

                    JFileChooser fc = new JFileChooser();
                    int option = fc.showSaveDialog(PrintAdminView.this);
                    if(option == JFileChooser.APPROVE_OPTION){
                        String filename = fc.getSelectedFile().getName(); 
                        String path = fc.getSelectedFile().getParentFile().getPath();

                        int len = filename.length();
                        String ext = "";
                        String file = "";

                        if(len > 4){
                            ext = filename.substring(len-4, len);
                        }

                        if(ext.equals(".xls")){
                            file = path + "\\" + filename; 
                        }else{
                            file = path + "\\" + filename + ".xls"; 
                        }
                            toExcel(TBL_print, new File(file));
                    }

                }

        
    }//GEN-LAST:event_Print_BtnActionPerformed

    private void RBtn_ExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBtn_ExcelActionPerformed
        RBtn_PDF.setSelected(false);
    }//GEN-LAST:event_RBtn_ExcelActionPerformed

    private void RBtn_PDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBtn_PDFActionPerformed
        RBtn_Excel.setSelected(false);
    }//GEN-LAST:event_RBtn_PDFActionPerformed
    
    public void PrintActionListener(ActionListener al){
        Print_Btn.addActionListener(al);
    }
    
    public void CBxTableActionListener(ActionListener al){
        Cbx_bang.addActionListener(al);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrintAdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrintAdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrintAdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrintAdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrintAdminView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JCheckBox CHBx_Fit_Width;
    public javax.swing.JCheckBox CHBx_Footer;
    public javax.swing.JCheckBox CHBx_Header;
    public javax.swing.JCheckBox CHBx_Interative;
    public javax.swing.JCheckBox CHBx_showprintdialog;
    public javax.swing.JComboBox Cbx_bang;
    public javax.swing.JLabel LB_TenBang;
    public javax.swing.JButton Print_Btn;
    public javax.swing.JRadioButton RBtn_Excel;
    public javax.swing.JRadioButton RBtn_PDF;
    public javax.swing.JTable TBL_print;
    public javax.swing.JTextField Txt_Footer;
    public javax.swing.JTextField Txt_Header;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
